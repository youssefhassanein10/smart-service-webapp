// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram Web App
let tg = window.Telegram.WebApp;
tg.expand();
tg.enableClosingConfirmation();

// –î–∞–Ω–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
let products = [];
let cart = [];
let selectedPaymentMethod = null;

// –≠–ª–µ–º–µ–Ω—Ç—ã DOM
const productsGrid = document.getElementById('productsGrid');
const loadingElement = document.getElementById('loading');
const cartOverlay = document.getElementById('cartOverlay');
const cartContent = document.getElementById('cartContent');
const cartTotal = document.getElementById('cartTotal');
const paymentModal = document.getElementById('paymentModal');
const paymentMethods = document.getElementById('paymentMethods');

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
document.addEventListener('DOMContentLoaded', function() {
    loadProducts();
    setupEventListeners();
});

// –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤
async function loadProducts() {
    try {
        // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –∑–∞–ø—Ä–æ—Å –∫ API
        products = [
            {
                id: 1,
                name: "üåê –í–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞",
                description: "–°–æ–∑–¥–∞–Ω–∏–µ —Å–∞–π—Ç–∞ –ø–æ–¥ –∫–ª—é—á —Å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º –¥–∏–∑–∞–π–Ω–æ–º –∏ –∞–¥–∞–ø—Ç–∏–≤–Ω–æ–π –≤–µ—Ä—Å—Ç–∫–æ–π",
                price: 10000,
                category: "web"
            },
            {
                id: 2,
                name: "üé® UI/UX –î–∏–∑–∞–π–Ω",
                description: "–ü—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤ –∏ –æ–ø—ã—Ç –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è",
                price: 5000,
                category: "design"
            },
            {
                id: 3,
                name: "üíº –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è",
                description: "–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –ø–æ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–º –≤–æ–ø—Ä–æ—Å–∞–º –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é 1 —á–∞—Å",
                price: 3000,
                category: "consult"
            },
            {
                id: 4,
                name: "üì± –ú–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ",
                description: "–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –∫—Ä–æ—Å—Å–ø–ª–∞—Ç—Ñ–æ—Ä–º–µ–Ω–Ω–æ–≥–æ –º–æ–±–∏–ª—å–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è",
                price: 15000,
                category: "web"
            },
            {
                id: 5,
                name: "üöÄ –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏",
                description: "–£—Å–∫–æ—Ä–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã —Å–∞–π—Ç–∞ –∏ —É–ª—É—á—à–µ–Ω–∏–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π",
                price: 4000,
                category: "web"
            },
            {
                id: 6,
                name: "üõ° –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞",
                description: "–ï–∂–µ–º–µ—Å—è—á–Ω–∞—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –≤–∞—à–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞",
                price: 2000,
                category: "consult"
            }
        ];

        displayProducts(products);
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤:', error);
        showError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤');
    }
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤
function displayProducts(productsToShow) {
    loadingElement.style.display = 'none';
    productsGrid.innerHTML = '';

    productsToShow.forEach(product => {
        const productCard = document.createElement('div');
        productCard.className = 'product-card';
        productCard.innerHTML = `
            <h3>${product.name}</h3>
            <div class="description">${product.description}</div>
            <div class="price">${product.price.toLocaleString()}‚ÇΩ</div>
            <div class="actions">
                <button class="btn btn-secondary" onclick="viewProduct(${product.id})">‚ÑπÔ∏è –ü–æ–¥—Ä–æ–±–Ω–µ–µ</button>
                <button class="btn btn-primary" onclick="addToCart(${product.id})">üõí –í –∫–æ—Ä–∑–∏–Ω—É</button>
            </div>
        `;
        productsGrid.appendChild(productCard);
    });
}

// –ü—Ä–æ—Å–º–æ—Ç—Ä —Ç–æ–≤–∞—Ä–∞
function viewProduct(productId) {
    const product = products.find(p => p.id === productId);
    if (product) {
        tg.showPopup({
            title: product.name,
            message: `${product.description}\n\nüíµ –¶–µ–Ω–∞: ${product.price.toLocaleString()}‚ÇΩ`,
            buttons: [
                {type: 'default', text: 'üõí –î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É', id: 'add'},
                {type: 'cancel', text: '–ó–∞–∫—Ä—ã—Ç—å'}
            ]
        }, function(buttonId) {
            if (buttonId === 'add') {
                addToCart(productId);
            }
        });
    }
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∫–æ—Ä–∑–∏–Ω—É
function addToCart(productId) {
    const product = products.find(p => p.id === productId);
    if (product) {
        const existingItem = cart.find(item => item.product.id === productId);
        
        if (existingItem) {
            existingItem.quantity += 1;
        } else {
            cart.push({
                product: product,
                quantity: 1
            });
        }
        
        updateCart();
        tg.HapticFeedback.impactOccurred('light');
        showNotification(`"${product.name}" –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É`);
    }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã
function updateCart() {
    const cartCount = cart.reduce((total, item) => total + item.quantity, 0);
    
    // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∏–∫–æ–Ω–∫—É –∫–æ—Ä–∑–∏–Ω—ã —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º —Ç–æ–≤–∞—Ä–æ–≤
    if (cartCount > 0) {
        document.body.classList.add('has-cart');
    } else {
        document.body.classList.remove('has-cart');
    }
}

// –û—Ç–∫—Ä—ã—Ç–∏–µ –∫–æ—Ä–∑–∏–Ω—ã
function openCart() {
    renderCart();
    cartOverlay.style.display = 'block';
}

// –ó–∞–∫—Ä—ã—Ç–∏–µ –∫–æ—Ä–∑–∏–Ω—ã
function closeCart() {
    cartOverlay.style.display = 'none';
}

// –û—Ç—Ä–∏—Å–æ–≤–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã
function renderCart() {
    cartContent.innerHTML = '';
    
    if (cart.length === 0) {
        cartContent.innerHTML = '<p style="text-align: center; color: #666;">–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞</p>';
        return;
    }
    
    cart.forEach((item, index) => {
        const cartItem = document.createElement('div');
        cartItem.className = 'cart-item';
        cartItem.innerHTML = `
            <div>
                <strong>${item.product.name}</strong>
                <div>${item.product.price.toLocaleString()}‚ÇΩ √ó ${item.quantity}</div>
            </div>
            <div>
                <strong>${(item.product.price * item.quantity).toLocaleString()}‚ÇΩ</strong>
                <button onclick="removeFromCart(${index})" style="margin-left: 10px; background: #ff4757; color: white; border: none; border-radius: 5px; padding: 5px 10px;">√ó</button>
            </div>
        `;
        cartContent.appendChild(cartItem);
    });
    
    const total = cart.reduce((sum, item) => sum + (item.product.price * item.quantity), 0);
    cartTotal.textContent = total.toLocaleString();
}

// –£–¥–∞–ª–µ–Ω–∏–µ –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã
function removeFromCart(index) {
    cart.splice(index, 1);
    renderCart();
    updateCart();
    tg.HapticFeedback.impactOccurred('light');
}

// –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞
function checkout() {
    if (cart.length === 0) {
        showNotification('–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞');
        return;
    }
    
    showPaymentMethods();
}

// –ü–æ–∫–∞–∑ —Å–ø–æ—Å–æ–±–æ–≤ –æ–ø–ª–∞—Ç—ã
function showPaymentMethods() {
    const methods = [
        { id: 'sber', name: '–°–±–µ—Ä–±–∞–Ω–∫', type: 'card' },
        { id: 'tinkoff', name: '–¢–∏–Ω—å–∫–æ—Ñ—Ñ', type: 'card' },
        { id: 'alpha', name: '–ê–ª—å—Ñ–∞-–ë–∞–Ω–∫', type: 'card' },
        { id: 'nspk', name: 'QR –ù–°–ü–ö', type: 'qr' },
        { id: 'mts', name: '–ú–¢–° –ë–∞–Ω–∫', type: 'card' },
        { id: 'ozon', name: 'Ozon Bank', type: 'card' }
    ];
    
    paymentMethods.innerHTML = '';
    methods.forEach(method => {
        const methodElement = document.createElement('div');
        methodElement.className = 'payment-method';
        methodElement.innerHTML = `
            <div>
                <strong>${method.name}</strong>
                <div>${method.type === 'qr' ? 'QR-–∫–æ–¥ –¥–ª—è –æ–ø–ª–∞—Ç—ã' : '–ë–∞–Ω–∫–æ–≤—Å–∫–∞—è –∫–∞—Ä—Ç–∞'}</div>
            </div>
        `;
        methodElement.onclick = () => selectPaymentMethod(method);
        paymentMethods.appendChild(methodElement);
    });
    
    paymentModal.style.display = 'block';
    closeCart();
}

// –í—ã–±–æ—Ä —Å–ø–æ—Å–æ–±–∞ –æ–ø–ª–∞—Ç—ã
function selectPaymentMethod(method) {
    selectedPaymentMethod = method;
    
    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    paymentModal.style.display = 'none';
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –±–æ—Ç–∞
    const orderData = {
        action: 'create_order_from_mini_app',
        products: cart.map(item => ({
            id: item.product.id,
            name: item.product.name,
            price: item.product.price,
            quantity: item.quantity
        })),
        total: cart.reduce((sum, item) => sum + (item.product.price * item.quantity), 0),
        payment_method: method.id,
        payment_method_name: method.name
    };
    
    tg.sendData(JSON.stringify(orderData));
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
    tg.showConfirm('–ó–∞–∫–∞–∑ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω! –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –±–æ—Ç?', function(confirmed) {
        if (confirmed) {
            tg.close();
        }
    });
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
function setupEventListeners() {
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –∫–æ—Ä–∑–∏–Ω—ã
    document.getElementById('closeCart').onclick = closeCart;
    
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    document.getElementById('closeModal').onclick = function() {
        paymentModal.style.display = 'none';
    };
    
    // –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞
    document.getElementById('checkoutBtn').onclick = checkout;
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–∞ –≤–Ω–µ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
    window.onclick = function(event) {
        if (event.target === cartOverlay) {
            closeCart();
        }
        if (event.target === paymentModal) {
            paymentModal.style.display = 'none';
        }
    };
    
    // –ö–∞—Ç–µ–≥–æ—Ä–∏–∏
    document.querySelectorAll('.category-btn').forEach(btn => {
        btn.addEventListener('click', function() {
            // –£–±–∏—Ä–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å —É –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫
            document.querySelectorAll('.category-btn').forEach(b => b.classList.remove('active'));
            // –î–æ–±–∞–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å —Ç–µ–∫—É—â–µ–π –∫–Ω–æ–ø–∫–µ
            this.classList.add('active');
            
            const category = this.dataset.category;
            filterProducts(category);
        });
    });
}

// –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
function filterProducts(category) {
    if (category === 'all') {
        displayProducts(products);
    } else {
        const filteredProducts = products.filter(product => product.category === category);
        displayProducts(filteredProducts);
    }
}

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
function showNotification(message) {
    tg.showPopup({
        title: '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ',
        message: message,
        buttons: [{type: 'default', text: 'OK', id: 'ok'}]
    });
}

function showError(message) {
    tg.showPopup({
        title: '–û—à–∏–±–∫–∞',
        message: message,
        buttons: [{type: 'default', text: 'OK', id: 'ok'}]
    });
}

// –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –∫–æ—Ä–∑–∏–Ω—ã –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
function addCartButton() {
    const cartBtn = document.createElement('button');
    cartBtn.innerHTML = 'üõí –ö–æ—Ä–∑–∏–Ω–∞';
    cartBtn.style.cssText = `
        position: fixed;
        bottom: 20px;
        right: 20px;
        background: #667eea;
        color: white;
        border: none;
        border-radius: 50px;
        padding: 15px 25px;
        font-size: 16px;
        cursor: pointer;
        box-shadow: 0 4px 15px rgba(0,0,0,0.2);
        z-index: 999;
    `;
    cartBtn.onclick = openCart;
    document.body.appendChild(cartBtn);
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É –∫–æ—Ä–∑–∏–Ω—ã –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏
setTimeout(addCartButton, 1000);
