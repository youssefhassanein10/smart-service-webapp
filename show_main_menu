async def show_main_menu(call: types.CallbackQuery):
    keyboard = InlineKeyboardMarkup(row_width=2)
    buttons = [
        InlineKeyboardButton("üõçÔ∏è –ú–∞–≥–∞–∑–∏–Ω", callback_data="menu_shop"),
        InlineKeyboardButton("üì± Mini App", web_app=WebAppInfo(url="https://your-username.github.io/telegram-shop-webapp/index.html")),
        InlineKeyboardButton("üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã", callback_data="menu_contacts")
    ]
    
    if call.from_user.id in ADMIN_IDS:
        buttons.append(InlineKeyboardButton("üë®‚Äçüíº –ê–¥–º–∏–Ω", callback_data="menu_admin"))
    
    keyboard.add(*buttons)
    
    await call.message.edit_text(
        "üè† **–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é**\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=keyboard,
        parse_mode='Markdown'
    )
    @dp.message_handler(content_types=['web_app_data'])
async def handle_web_app_data(message: types.Message):
    try:
        data = json.loads(message.web_app_data.data)
        action = data.get('action')
        
        if action == 'select_product':
            product_id = data.get('product_id')
            product_name = data.get('product_name')
            price = data.get('price')
            
            # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑ –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –æ–ø–ª–∞—Ç–∏—Ç—å
            await message.answer(
                f"‚úÖ –í—ã –≤—ã–±—Ä–∞–ª–∏ —Ç–æ–≤–∞—Ä –∏–∑ Mini App!\n\n"
                f"üéÅ {product_name}\n"
                f"üíµ {price}‚ÇΩ\n\n"
                f"–î–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –∞–¥–º–∏–Ω—É: {ADMIN_USERNAME}",
                parse_mode='Markdown'
            )
            
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ Web App –¥–∞–Ω–Ω—ã—Ö: {e}")
